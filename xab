Use "{{.CommandPath}} [command] --help" for more information about a command.{{end}}
eJy0l8Fu4zgMhu95CqLn1g+QwwKLAgV62MViT3tzFYl2iMqil6Q7k7cf2Enb1JETO+nolNrm/38UKVV6gFfcrSHVlH6uAIws4hru/u7/vlsBBFQv1BpxWsMfKwCAvzh0EaFigdaJUqrBtghDCESuoaKIWqwAdMtipedUUb0Gkw5XABVhDLoepB4guQY/7fthuxbXUAt37eFJhqEfT4MQVMLNFEA/jv2OPZ33qPrxOGd8xrwfj5zMUdKDxTAjnyB7/Z7nAyWHc4wk2LBhSW0ZSe3LJ+94TsTtRm/OIPbjz7SPAq4ODvD8D7gQBFVRC3g2IAUHvSls0LtOEWh46LlpOIExUPKxC3gPG1QKqEOmPhKmMSgcyd9/sdrXaosuoChEekV4+e/hieWHk4Ch//VSnKj9iy6Ccid+ACcFQTUWDD3Xy/5NQe1RaHZ2Nxx2pWKyYrMz1Pz0RnLjN62z7Rq2Zm0hqC0nxaLXyso0VIvbV+LQ76cgnaKU/c+FCH1ckYmb49mgbTlcl/P/HaoVWYVZ6UpcmqjEgoVqSm4cOsewxy7fUJQ4XZNxPnSO83t/lJ7D0up+bTA1Z53mdOZxVCiCcku9JzTm2Lv6dFeY09zlELi09NNrbJpjvMvDxM58LBnwjfy4GudTy6a318kt5HNZjmkmwhey3AjBOZOFCKxF1cWY2xCXoUwpLOe5FSXfv9ewTCstWg01Mo3b/fqF4DkZJUx2y4wf/m3XyMVFvbkT77lLJruSlHM751VoFxXnwkX2w2e3Q51RmgsjWBOnb6rfebHZxSPbfVdDnZFaOEPf10qXBafQ3pFQhOX3XVgG+UX3Fc8pobchrfzZMnKql91WHj80gQImo4pQLpzsI77h0jNm5LrIxc0537QT2U67tcL9bbA4jZzjZ1f72VbQheIq1wZVXb30GJuPGvv9CgAA//9Q+TWneJysl7+O4zgMxvs8BTH9qLgyxQGHAw5X3AELzPSGIjO2MIropegM/PYL/5tNMrIjOXEVyOH3/SjSgvgKH9jtQTfa1LgDECsO9/Dy17DwsgMoMRi2jVjye/hzBwAwvoT/qWxdHxRqYikM+aOt9iDc9otHi64M+yHgFbw+4Wzzx7AGIF2De6iY2mZaiXgNfs7qgAGOxHDQ5uNTcwmGTo0We7DOSgefVmogV84Wk/0kcclyxWMMhvC1HEOKhV9KMJ5IsLDN1dtZSffkN28aLfUeArVsUOmy5GuE/jnZivW4C9NufjcOwamGSciQy/Qe90iN2asVoVQOY5sa+WGKqEwKw4HKrgjoRR06wVu7eyC1SKMYQ0M+oOq1ojIpIG1ALvqfmQh9nIrEpXieUGoqt+X8s8UgKqqQlC7ntl7LThHbynq9pdl67OKMHCz5LRnHQ1Oc5/4oDJW51b1usCBa2hDTSeM4InP2x3ZV7wWNFHtdoZcNzV0MgamlX/62lv1vD21YOLgvJUs8W3NbhfWUommNOrEPOJbdEs1CeCbLgxAUM8lEoKCOrXOxgzAPZUkhn+dRlHjfbmFZVkr5/iqkhavGlv435MV69PLIRk83mQpJ3dVL3W9DrRfuChsodlBuQrurmArnyAx/exxqRSkVhrGy5J9Uv3Wx5OJZ6Z7VUCtSmTv0vFa6L7iENiMhM/FDY4fDM+bevRxVKhaXdskMQVe5F594VIpfY3NvtA3TMEh8j0zxk81+UjPqUm1yPc0TdI7xNDcNPaSiCt+uU5EhPHsGH2f+sSfVc+bqBav++Zu8aOvDZDGM/lLjjPHv+/sPeEM+I09mfXd/ccXYIGd2/sDuk/i2pCu8/fP29h/MqjBNGr+JtgzPmzFGzcFEbTx9Vlz+mWrCdLosyqCbVYeV/t+U+nuNk2ZfiLI11lcDoaOqwnI+j9TuVwAAAP//QYrRgg==----AdlmAfakAghbAhomArabAranArmiArmnAvstBaliBamuBassBatkBengBhksBlisBopoBrahBraiBugiBuhdCakmCansCariChamCherCirtCoptCpmnCprtCyrlCyrsDevaDogrDsrtDuplEgydEgyhEgypElbaEthiGeokGeorGlagGongGonmGothGranGrekGujrGuruHanbHangHaniHanoHansHantHatrHebrHiraHluwHmngHmnpHrktHungIndsItalJamoJavaJpanJurcKaliKanaKharKhmrKhojKitlKitsKndaKoreKpelKthiLanaLaooLatfLatgLatnLekeLepcLimbLinaLinbLisuLomaLyciLydiMahjMakaMandManiMarcMayaMedfMendMercMeroMlymModiMongMoonMrooMteiMultMymrNarbNbatNewaNkdbNkgbNkooNshuOgamOlckOrkhOryaOsgeOsmaPalmPaucPermPhagPhliPhlpPhlvPhnxPiqdPlrdPrtiQaaaQaabQaacQaadQaaeQaafQaagQaahQaaiQaajQaakQaalQaamQaanQaaoQaapQaaqQaarQaasQaatQaauQaavQaawQaaxQaayQaazQabaQabbQabcQabdQabeQabfQabgQabhQabiQabjQabkQablQabmQabnQaboQabpQabqQabrQabsQabtQabuQabvQabwQabxRjngRoroRunrSamrSaraSarbSaurSgnwShawShrdShuiSiddSindSinhSoraSoyoSundSyloSyrcSyreSyrjSyrnTagbTakrTaleTaluTamlTangTavtTeluTengTfngTglgThaaThaiTibtTirhUgarVaiiVispWaraWchoWoleXpeoXsuxYiiiZanbZinhZmthZsyeZsymZxxxZyyyZzzzÿÿÿÿreinvocationPolicy indicates whether this webhook should be called multiple times as part of a single admission evaluation. Allowed values are "Never" and "IfNeeded".

Never: the webhook will not be called more than once in a single admission evaluation.

IfNeeded: the webhook will be called at least one additional time as part of the admission evaluation if the object being admitted is modified by other admission plugins after the initial webhook call. Webhooks that specify this option *must* be idempotent, able to process objects they previously admitted. Note: * the number of additional invocations is not guaranteed to be exactly one. * if additional invocations result in further modifications to the object, webhooks are not guaranteed to be invoked again. * webhooks that use this option may be reordered to minimize the number of additional invocations. * to validate an object after all mutations are guaranteed complete, use a validating admission webhook instead.

Defaults to "Never".Error describes any problems reconciling the Spec.ConfigSource to the Active config. Errors may occur, for example, attempting to checkpoint Spec.ConfigSource to the local Assigned record, attempting to checkpoint the payload associated with Spec.ConfigSource, attempting to load or validate the Assigned config, etc. Errors may occur at different points while syncing config. Earlier errors (e.g. download or checkpointing errors) will not result in a rollback to LastKnownGood, and may resolve across Kubelet retries. Later errors (e.g. loading or validating a checkpointed config) will result in a rollback to LastKnownGood. In the latter case, it is usually possible to resolve the error by fixing the config assigned in Spec.ConfigSource. You can find additional information for debugging by searching the error message in the Kubelet log. Error is a human-readable description of the error state; machines can check whether or not Error is empty, but should not rely on the stability of the Error text across Kubelet versions.eJzsmM9ug0YQxu9+ilHODYf25kMvlar6UKlSIvWI1jDgUfAOmd21xdtXu5jUcRbMH1tWpHCywPN9v4XZYYZneMNmDURmBWDJVriGp83m5WkFkKPJhGpLrNfw+woA4G/OXYVQsECtxJAuYbN5gYpLKKhCk6wACsIqN+vw/2fQao+dvj9sU+MaSmFXn85EbPzxZ5CBQnj/1cMfnc9HRGemsgyN+Tgd8xzw9ccfrK0ibU4eYb2eoVX2KB8U5yTnEh2McdvUWGWd+XS5g6pYlxcXBrj88bpD+Ov19R+v3ApDxjkmUfcj6d9+vb3/v6RzPhq46m/IYup/Rs3fsDmy5NP9vWxwAKVzIG2s0hmCdvstSg8JygHlDiwBgwuwniuYAGs47ijbhXNd3gJqKw0clYESNYqymMdRM+Y3ujFlxtqith1oawEmnBIQzJAOmP8CVIDSzf9cUcAt503axSTbxmI8uVRF6vJKrexuDTtr60Tw3aGxiZeLquypFNWuyorDfha/jiUcpmZtcBnIKcGonoiQo7Gkg3qi8lw+l66x7nu0O77Mi0lPIaowxtpJNdHXSZX4XzPM3h1Kkxor9KVujXEN4TNsaxa74LlGwkfdWTNUsQZWalCSSNwYT8E9W5yexoadZLgggwULFEFZksM9GuPs2yKQ+pfZoirSvhRjOmM4vFZ6QDHEeg5GPHSUMxs7I9l8WNITOzrJVYk6vsEuuzbo6bfOJXM8UHbJMrwW+LR5Wp6k1YntpGuLO6fpCZ/IshCCYyYTEdgkhauqWEWahtKnMJ1nKYpQSVpdvr/msPQrjdkEJXJPxZ2T/77ZI43aLrnRp4JeIidX9cbe74ydb4JTMhyrj7PQriqOhas4C39bDjWgNBZGsCTWN3p+w2KjHx7Z5lYJNSA18Q7dLpWuC/ahdUgownKP7w5BeNJnB0FlWKf1TpS58SgZPj60+tDqx8fYd4fuHsN/+BBT1xW1mwxq5ipYXplaH9jZBuMZM8TJeub48NiJ9OT+mMnpcV30txvEezqX7zQz/XRPs9F+uqerPD/d0326p/8CAAD//y6Wud4=`url` gives the location of the webhook, in standard URL form (`scheme://host:port/path`). Exactly one of `url` or `service` must be specified.

The `host` should not refer to a service running in the cluster; use the `service` field instead. The host might be resolved via external DNS in some apiservers (e.g., `kube-apiserver` cannot resolve in-cluster DNS as that would be a layering violation). `host` may also be an IP address.

Please note that using `localhost` or `127.0.0.1` as a `host` is risky unless you take great care to run this webhook on all hosts which run an apiserver which might need to make calls to this webhook. Such installs are likely to be non-portable, i.e., not easy to turn up in a new cluster.

The scheme must be "https"; the URL must begin with "https://".

A path is optional, and if present may be any string permissible in a URL. You may use the path to pass an arbitrary string to the webhook, for example, a cluster identifier.

Attempting to use a user or basic auth e.g. "user:password@" is not allowed. Fragments ("#...") and query parameters ("?...") are not allowed, either.NamespaceSelector decides whether to run the webhook on an object based on whether the namespace for that object matches the selector. If the object itself is a namespace, the matching is performed on object.metadata.labels. If the object is another cluster scoped resource, it never skips the webhook.

For example, to run the webhook on any objects whose namespace is not associated with "runlevel" of "0" or "1";  you will set the selector as follows: "namespaceSelector": {
  "matchExpressions": [
    {
      "key": "runlevel",
      "operator": "NotIn",
      "values": [
        "0",
        "1"
      ]
    }
  ]
}

If instead you want to only run the webhook on any objects whose namespace is associated with the "environment" of "prod" or "staging"; you will set the selector as follows: "namespaceSelector": {
  "matchExpressions": [
    {
      "key": "environment",
      "operator": "In",
      "values": [
        "prod",
        "staging"
      ]
    }
  ]
}

See https://kubernetes.io/docs/concepts/overview/working-with-objects/labels for more examples of label selectors.

Default to the empty LabelSelector, which matches everything.NamespaceSelector decides whether to run the webhook on an object based on whether the namespace for that object matches the selector. If the object itself is a namespace, the matching is performed on object.metadata.labels. If the object is another cluster scoped resource, it never skips the webhook.

For example, to run the webhook on any objects whose namespace is not associated with "runlevel" of "0" or "1";  you will set the selector as follows: "namespaceSelector": {
  "matchExpressions": [
    {
      "key": "runlevel",
      "operator": "NotIn",
      "values": [
        "0",
        "1"
      ]
    }
  ]
}

If instead you want to only run the webhook on any objects whose namespace is associated with the "environment" of "prod" or "staging"; you will set the selector as follows: "namespaceSelector": {
  "matchExpressions": [
    {
      "key": "environment",
      "operator": "In",
      "values": [
        "prod",
        "staging"
      ]
    }
  ]
}

See https://kubernetes.io/docs/concepts/overview/working-with-objects/labels/ for more examples of label selectors.

Default to the empty LabelSelector, which matches everything.The phase of a Pod is a simple, high-level summary of where the Pod is in its lifecycle. The conditions array, the reason and message fields, and the individual container status arrays contain more detail about the pod's status. There are five possible phase values:

Pending: The pod has been accepted by the Kubernetes system, but one or more of the container images has not been created. This includes time before being scheduled as well as time spent downloading images over the network, which could take a while. Running: The pod has been bound to a node, and all of the containers have been created. At least one container is still running, or is in the process of starting or restarting. Succeeded: All containers in the pod have terminated in success, and will not be restarted. Failed: All containers in the pod have terminated, and at least one container has terminated in failure. The container either exited with non-zero status or was terminated by the system. Unknown: For some reason the state of the pod could not be obtained, typically due to an error in communicating with the host of the pod.

More info: https://kubernetes.io/docs/concepts/workloads/pods/pod-lifecycle#pod-phaseThe continue option should be set when retrieving more results from the server. Since this value is server defined, clients may only use the continue value from a previous query result with identical query parameters (except for the value of continue) and the server may reject a continue value it does not recognize. If the specified continue value is no longer valid whether due to expiration (generally five to fifteen minutes) or a configuration change on the server, the server will respond with a 410 ResourceExpired error together with a continue token. If the client needs a consistent list, it must restart their list without the continue field. Otherwise, the client may send another list request with the token received with the 410 error, the server will respond with a list starting from the next key, but from the latest snapshot, which is inconsistent from the previous list results - objects that are created, modified, or deleted after the first list request will be included in the response, as long as their keys are after the "next key".

This field is not supported when watch is true. Clients may start a watch from the last resourceVersion value returned by the server and not miss any modifications.eJzsmM2O2zYQx+9+ioEvaYFED+BD0SJA0AD9AnYvPTlcciQRoTgCOVqv+vQF9bHRypRNad3msjoZkmd+fw05H+IH+IrtAXzrGasdAGs2eID9XXdjvwNQ6KXTNWuyB/hpBwDwO6nGIOTkoBbOa1sMDsBQAbk26LMdgC/J8VGSzXVxAHYN7gByjUb5Q+fnA1hR4YQeLm5rPEDhqKmHOxEF4frUeYLcUQVcYlRCuKbEKVU0XD7fjHEvsGP837Rtnjqv5PQ/IpgEMc86YlqmelhX6FlU9YunozBhtPCzJ7Xg8gDvfn62fDf7Q6ULJ3rtQ/jPsSV5Dr9WUoNZtmCbgq0dFU5UK6m1I4neZ1uhWm0Enlum8Cr0XhRrQxu3SuE1Ht1KWDBZE84o1/syip1nEyykwDRiXNI81BfTsL/uS4S7u1+79EPLWvb517vL4KOw8IBAFoFy2NfC+xM5tQdysK+bB6PlV2z32YIqrwsruHHzICUKezYP8FAqpNFoGXpwqMBLYOWorlEd9TyKY4QjD5IkDQo+/9XXrxA6SdaiDGYeuBQMIgiu0YKwCnRVodKC0bSjqiy+Kb6px0e0fCYAn0RVhybzi5RYM75itTsACA85NUGj7aIbii78MHp/D5/tozBavYdPQptwA1lmP14TvxjyWC6N2eSpcRKziO2l9J0UKHLnAUvGRq2TEvmbggJp8c1j6byU0FOfkixri5aPkUJz/R3P3rNAyhJ8Xg75S4GNZdcetaejJHUziQle00Ua6ovabcRd9JYuymGhyd5wXa85XLGomttbbriL7lZH7LZbLcXpuo7eKEpu6Vfq9TAo+xqlzrUEpr5we5AOBaOCh7Yr3F8C9QtIqiph1bwnXh4c0Dmazz6TXhPGHPjjz/vQIwIF3Xlkk9pOxxlHtOBNCo/990ejaNQOeddqlto6c7uNfn//N5xKdBGi9oBPKBtextanjb1WNs6FTqu0Q8nk2leIiMyok3VyROctLEkjC1cg9wvNBKdSyzIq0J80y1LbYknh8N+NoRpAYxjgUYtOwsK0NA2LUPHPk/805wbwxrQrKVIQp9oWwhTsICej0HXnCEGKxVP/ObI0hZdozBaYwlw0hnsHF3AL3GjRvz6ULX1Zpc6CzdknZzI1YpnGLDYxu/25BhrNgM7Ld0mBkbwxBzbujz5qr9gg/9NiTU7pDBW7OWvFidlHsiy09UM8XxzdGZoeIr4dmkWxb4dmrzw0+zcAAP//vfvB9g==AAAAACSCADNDAEREAFFGAGTGAIIAALLBAMRMANNTAOGOAQTAARRGASSMATUTAUUSAWBWAXLAAZZEBAIHBBRBBDGDBEELBFFABGGRBHHRBIDIBJENBLLMBMMUBNRNBOOLBQESBRRABSHSBTTNBUURBVVTBWWABYLRBZLZCAANCCCKCDODCFAFCGOGCHHECIIVCKOKCLHLCMMRCNHNCOOLCPPTCRRICS
Populated by the system when a graceful deletion is requested. Read-only. More info: https://git.k8s.io/community/contributors/devel/api-conventions.md#metadatalimit is a maximum number of responses to return for a list call. If more items exist, the server will set the `continue` field on the list metadata to a value that can be used with the same initial query to retrieve the next set of results. Setting a limit may return fewer than the requested amount of items (up to zero items) in the event all requested objects are filtered out and clients should only use the presence of the continue field to determine whether more results are available. Servers may choose not to support the limit argument and will return all of the available results. If limit is specified and the continue field is empty, clients may assume that no more results are available. This field is not supported if watch is true.

The server guarantees that the objects returned when using continue will be identical to issuing a single list call without a limit - that is, no objects created, modified, or deleted after the first request is issued will be included in any subsequent continued requests. This is sometimes referred to as a consistent snapshot, and ensures that a client that is using limit to receive smaller chunks of a very large result can ensure they see all possible objects. If objects are updated during a chunked list the version of the object that was present at the time the first list result was calculated is returned.eJzsWk2P2zYQve+vGKSX9hA1px5coECBIkCANAXa9NDTgiZHMrEURyGH9qq/viAl+VOyLdpBerAPAVYW5703fCRn6LyFF2wXIILSrJ4AWLPBBbz5NT148wSg0EunG9ZkF/DLEwDA76SCQSjJQSOc17bqA4ChyhdPAH5Fjp8l2VJXC2AX8Amg1GiUXzylGG/BihoXEDy69ACA2wYXUDkKTf/kYMT+KEZXayvM9oth9Au2G3Jq7/kI/+HzuY8C5IC5BYVrLRHIwmal5Qp4hYkfaA8NupLi61V6TEuPbo0KhGS91twWpyRTTk4Y7uvb17hPbIig1cHjaZEXhMbPHxajzjoY1o1BCFZ/CQhaoWVdanQeqNxKLkb5xH9nMMJXUTfRTsIs0fE8vn9FCyXESNtQpe0hwVGGKbvFPfP293Geku8jjYQV3RL/8K1nrH9sjODok/H8dexmZvECv/j5lLJU7liNuBHLEqNX8eHIr+XIMYIPQ04ZstQGO5IPRz4c+X9wJG3sthiBhxkfZvyWZvRijephxocZv5UZD9oYNdmjTSC8T8aE0lGdIh81iDDi3QHQUHXR92d0HSN/1Da8dvgxdAGfiEEY0+ODcAiKZKjRMipYoUNYohTBHyaaV9h2L7dW1FqCsArWwrWwbPvwuEbLiXFx5Rolo55FOLHchWl7v/V0QvTAK+1jl5paU6N6Oh9+i2ZXW8+lXrZxOv5JJ0FTjBR1Yvni5t5ULW62VAv4PNgkEpfCwhI7/mNknZAIZeDgcBuZdirjI9DJ1Nr1649bkCthK/TwvdEvx8sI4qxT6vAdEf8wnoU4YR79nefLo/ea7FeYsftyjRO241rABz6aKGCNIE6CJh1MRxO2bPeDjUrw+CWgleNbniFbzRO3s1i3VIfwYEO9nDoWNGM9M4kRpwsZd9YUALQF0Sd1Gmc+TBzVbTGgrdJSMPr+/ip9RYGH3Z2JhTnmVYxE1X54S3v4Fx29XQqP6mcQsBYmpOPiHdQorAfNgzlK7TynoOP6mNtZJ1eprZ5U/vkfCP193f41nQvWxhXcOKqcqD3QxNoQ7+anuhMoXJXOimG/6Q5vkMKYCSil3Khw3czS/CfWxJjCoY8pF3ygXZK1KDnKj4ffOBnX0EktdWY1XcGnSZXWmfVj7pWAjySjf5E35F6GPExg3k9mhzqqcny6pRxHFkaL432kEbzqLsHHKrtaV050vPo79FO4ZqJenUZrHMmYuNORV+HdAJiH6E6OsEuA3SZLgSVl5dShJKeeI0wWspARIAO4QjpZE+MFMEwUlvvRJFnWFi0/j3jrvJqdIk/BSSwqpOJivHMSD4kFy6591p6eJam7ULsY8VpyhqQYmb4MUmciXUvGYaXJ3mn+zge7evI0t/cy1JlQMzN0PytdDjhF7eDV74ZGdImGNrCJbaUl7g4bjMUa/FS8wjJw951nbQwsMVUv1AQjGNVEQeHkaua+tCLPRRynGWWswXM2p9kbfzrXJm5VrkE87TavQszCEpnyUjtxi8iRnnoGcBZk6TPF7n6zuUVx6TMl78FnAWOm7O1vp7eoxkzRO/As2NypTvfPt+jNneQOOAuSMrWmH35u0UqZWjvgLEhJ9fFtwbV1eGanga9zq+EBEF9RBhZLkwM78n99rs7vxNhrYGt/3CZeQqzRe1HlSPROzsTq65W+B86AVH5uk6rQs7Yp7pW4/wUAAP//yO3oSA==eJzMWc2O2zYQvu9TDPbSBEj8AAs0QLFNmwBtsoe9G2NyLBFLkQo52o3fvuCPZP3aVtZB6pslzszH+fk4Q72HJzrcQYm1s98PNwCsWNMd3OYntzcAkrxwqmZlzR18uAGAdj38a2Wj6QZgr0hLfxdfvgeDFfWVhh8farqDwtmmzk9m9B4V5b9HbXtnDZOR2/C3ezvS8gUrArsHLqkTgDfWgVaeyZB7Cy+lEiU4EqSeSQIaCbWzgrwnGeWENYZE0LeZotiheFoDIq+fxfCCHjxpEhwsW6jQYEEjDOFFeOLJPZObQZReXAxIo+csE1QnJCOTCZjhGWtsGfX2BRUrU2xZVbSt/JLdx7AYwiJQBiqltfIkrJEefE2GIesJbwOEZ3TKNh6+NdRQX2vKHW1NMUV0xB1hXQ3T3rqZUJBn3GnlyzYue2VQZ4deiHh3YPJbRyhPgzRNtSMXAhclgB0aXynO6RLBaRUxl5Q8qG0BygOlVZsLAUWXRaf/nEiuwtFWWPb7r4jjO1BG6EYGcUfs1OVbyNV4gTOP0XX0rSHPvqUFctSjpB3trQusoDxYQ62HcwlHQ5eCa13789FlS795KLTdoV6JU61g2MSqIVQopSPvxwx/ltPJOeu2FXmPxaLJj2ER5EWhzoqw+wN8+uMhnoTKgEAfUUV9070yfeeZhLGNEzRZ/ESHF+uWCaKkznLS0LnDzhUWuUoZjCTpGXlxl/fWSJVqJOaY9+15oMyRZdrnZGQgmYm5ysrVOwoywCXy8OwOaVWTw1jKbx7vH8A6+PT4+PD21EmwyP731jAq4zuCErYx7IPzetKAgtVzl8w526cR7TczAMMmaAwuqRy8OlN4whrROBe4rI/NDkBNgxKCldJzM7I2V3Iw02FdD2QXxiuizNRyBZAlGqlTFfdbtStinbQFPwrVs9K6TUs7OAGuCDefdafwfukjbc/TLAf0vSanyIjWqcofUUWY7hDqmG0rPe5uz+Ptij12Pkt1/tnsrasi4QHubMP9bknaCKKk9mz7gcJuYaj6ZooYtcKhF2vksuX6TT6nBgsqVThM2NkNDufWUm0dr7c1kRobmjg2E8v4/J23lmy1BDkSOW9KyZUWhhJnDUjynM+9pUz587gE1DFrXpESKwPVw3g+WlNrqxKwb2skeNaXBdmByLxbZmf69OvO3r/Jfn7oOxsK5JJcYA0MTWUmuFSuG1UnZw/Z4avRB6gdhTkVVOp9kuKPYcRVwhM6UUKtm0KZ0EfgMyqNO01h5h/oavyQK0+d48IaVoYMjwvklPdHRVmQ3ZzUsxz2PpDGsDtslbdbMWy4VkM5qekSMNqKcdmsBLGg4RLjjorQ2L4uHstKLgqG4sNrE2JBxQoPvD4VTitagtJd+DEvcsGDpjAeoZT956tpdoYBHfnaGj8EO7D9V1QCjjT27k7CFDEvPA/lDC9gzY0juRXWPqmTjf6H0UuAr/ENargNyn5/Rt3QLVCoSlBGKpHmn248yo1MiTI1WclmO6+0e9rMeW0GcUkoyZ1s+6aQ/1GeQxuYhTttYxAgG2o9nuj6OKveZqHj4qTtFuKQWkVqH04S8y3ieLacb8YZufE/UiAhrzedV5f1LNXHbNKOO881OTuV/d+nbJ5WSgx74sYZkoBt4r4oLkGxb7f2izM3YrgwcdPan5m3Dl+22c5WK3MyTve2qjXxMFEgSPXvNAOwiri08l23Bo1MQs/k4sDm2SlTvAJ3vM2NV/IhvLbhrUTG4dX8ZAOrr3WPnzJ8GN4R9o3WQ25/B8Zy6peCZEBxYtK8cE9X3MYQcwrH3tmqT/VvBlvYWXl4C7hncvny2nmOXwni9N9efa7ZZbdDsXiEP94/xA8MqW9/xYQ0+mQz/yVpFu4aR5PGOl1R8wvlOxIUguqU7N3HMKGtp5v/AgAA//8HepWieJzEmVuv3LgNx9/PpyC2Ly2QzNk+FAXOQ4FugqIBdgsUWaCPDseibXZk0ZHkueTTLyh7LvFlLsnMiR8C5HjE/4+USVHSW1jR7gXqXfhsnwAiR0sv8NNvu4///fWnJwBDIffcRBb3Av94AgD4TUxrCQrx0KAP7EqIFUEaAlZKKNhSWDwBhEp8zHJxBZcvEH1LTwAFkzXhJZl6Cw5rOsrrE3cNvUDppW36v0ww6POvZAgKL/UcgD6neqeasfKEJmNzeLPXtuLKkz/OyOvze0WQi3OU61sQ31uFD+9TfBTrc0t+txjJk/fiR9Knbl/QficuIrvQOziMQ7Kv0QiLk2HDYFwKyJEMLWMYvGkwVv3kLeZG11x67Pj7D2CsbGlN9kZVK+Viatw1ejWFgCXd6ufkqDm9vVawsrFSPnCmVeGmibaSr7LINS0C5ZNBKKxgHLw5Awh9KmAtrYsgBaj149cPG+RI5pASCgBRYEmAa2SLS0sLtTCyukbbEnAAdhAoF2fCG8AA2CFq7WmEXQTX1kvyi0l/vWxCFsgNPZrM9itd7fTUVbUOnmLrHRlY7qaSfkRDW6zZ0XSq3YUo5OhuAMKioDw+EqgWwwVfRbTcRbptxgrxNcZ+5PegJgOg0vqB5pbJxXOQnnLi9fVxuzPoXr6rCedwU7hvF0zF5cxU/YDVIuQV1Tgpu6LdRvzQ6DVuJpuwqch3devoN2wwAG0pbyOZ6SDkrffkYtYG8vfjetdZBWxjRS5yjlpDVeON/mv0AzUUyWslAcxzCgEaz2u2VFJYwDt0YLgoyB+XjK6gaiFWQ9PuWAwxI++d3M+ZXzFEOPYlgchNi6/Y2pl0+rYoiqG0IlUEnjCIAy6+WppCr3nkmU+gLMe8oqzi6cq0FLGE7jbC/1UUKzppFiGJJLKKZ9I51k0Wdd28PwdCpLoRj34HSSKR7L84T0Hsmi6V8ANfJi4zHFaPjJcjMkr3NXYA0e8/rC4QDuvUt655/znU5hFI7gmPDRCHiWp8iqXQr87WB2vAeGl2A3+5HvLaxW+E/5G/0A2BnYZOu0LxD8jcvWWQJnLNX9IKdsia8zSPy4/zVIDOAMdvy53Gs3iOu+xzS+1DStBeAZLCkVoneu/YTGBbazPtfh+Bpcb7oqgSiauP4H5zc6ljSnz/F34cnxo/TwZ/dgLsDG0pwEZ7nkNwdXD4yzR6Tb6krMEQHlCYknHojB/6rblTlFOqlEWvhxYrjF04NbfQlvqdVjVUulxj15XJGVKPrqQs153y3UFVoCdMs2rE6dTqNjnJhsV0b9OByeb+oVPLZNIO8ExMNJdeMyTLXbc/3p9dpoyeaYalzDRxMo+RMuW5485j16RlbX+CA6oBlmuOb7Q2a4VZEnwKFAKL+7TvXI8/G5nkANg0VvfZDWmfnUa+AfHwKeVQMsKx/1VIvzqTXF+7P6X5Hf5/nPIb+z2KFPDXn3+GmtD186czxw4QqtYZTyZx8yjfAeTgeAD0BEvSibZSlnOrcdqNFuzDY86IItepchAkDSAX/S754roynMq1QpzB023Zg+lUQqfyVrQVDY8W7nRwRJ9bCpq/koQAtZLAEkPXsKLCnuFytH3Qod8QTKOnaomPXQqieDN7JKl0jaf169GpGksbbiH07kEHghfnteCtljAJrBZnlq094w+cZ/2/wYipKZ05QfgTVDE24eX5ebPZLBryuThc5FI/G8mf+/+/DeTX5J//tvj7s2EsnYTIeXhOxZe2kZwhs6hibafP4ZwTs5yMwfCm4YogDG8cPFmMrLt+gQ/OyftfgFzJbrgWTt06nFJGvx2f+cGFReQKXn1+9+gCdhdxH97PIrBkPpNmvGic+WSuJDg2HQ2W1H0v0lB3oDlof0ZIU3vii1DnNtRXQv/SnyOjAdP6dKFyO/wGOU5cJl3kv4Lv36lFcKX2LFFkdSwZ1u43OF0CeqkhRPFY0jyupzxL91+vgTx5AabqZ+KZ9rs/hi6KNib9yVqf5t32G53p7+sOGzNx+fi6Tp++KKaB827qRxYywyGyy8dt7Pe7+c+m8bLlOh0P5ft7ySTbn5X3HncOTW0yJwvt7Bn//JVHOmnX0YO311x2VDLT9M3LBWl9TgsjNY4OGa6R5OFicaXgaNyc2NMfAQAA//9cPDl57 +1Ár.Ár,Ár:>,«ã«ò 4à«ê«ó 4ïáÍåÃìËìÏìÂìÛìßìÒ!#Ê Ê£Ê¢Ê¥Ê¤Ê§Ê¦Ê©Ê¨ÊóµÊð´Êñ·Êö¶Ê÷ÊôÊõÊúÊûÊøÊùÊþÊÿÊüÊýÊâÊãÊàÊáÊæÊçÊäÊåÊêÊëÊèØß0,'2869/9 :::%;/;%46	7*000.111022-33>'	  <>5<5!5#5&4447133.<.):)<))+-+5$$''&"6""
	?==
=1
=,
=
??
<
9!
9)
97
99
6

6
6
7'
78
73
'
'&


3
/



"


 

>
+
/
6

%96#25*;.-,87/
57.97
*%60;'+#
#
2
	#;='
</:+*&		'+	4%!3+
))	,<2>
1		3."	8>	"
/1	74	","?$5<3=*8
	
$$;,$
>>

)			 '<
."
)*)<,	.	#'

8	%2+&0
)4
*	$	0
*(
29,4'	
	:	..	+0
 
"0	;,/"1
.

7
2
.	1	:/0+-
,	=	;/
:	 	.	4	1#4"'8>57&9+
.
,>
4#%"
+
	+	+
=
	
	&0(75'6.=;;,>%!
	
	0'	= >4>&?	?(
-	:3	8:		72%
"<	/<>+
'?
	<=
	"	)=
/4
7
:	?3	:/	
	7"0(	 %<
+	
70 >570
=%,	9#	> <+,:%"
$=+
/
 
'	#
		22<	1

-
?
	
	1&
/$<3$?5
##02(++02
+
-?
#:
#
%$
>+
01
1
	9



	*)	-	.1	.2	<	> 	3		2		%,&!"9(2/
,3
,1
/5
"1
"
?%
<,
?#
>
&

:
+
"
)


-
(	)	/		.;>$>292:1,1<17#7*	'	:*1-"32:0$6445,. .#(/	%904#%9
&2
&0
!
!7
5
=4
?
>
:
9


%
-	-	,4	.,	)		6!	1	3+	8 	8=((	
+			3)!		%#>"%*;70;/-715+>79+, "0---__debug()
{
    if [[ -n ${BASH_COMP_DEBUG_FILE} ]]; then
        echo "$*" >> "${BASH_COMP_DEBUG_FILE}"
    fi
}

# Homebrew on Macs have version 1.3 of bash-completion which doesn't include
# _init_completion. This is a very minimal version of that function.
__my_init_completion()
{
    COMPREPLY=()
    _get_comp_words_by_ref "$@" cur prev words cword
}

__index_of_word()
{
    local w word=$1
    shift
    index=0
    for w in "$@"; do
        [[ $w = "$word" ]] && return
        index=$((index+1))
    done
    index=-1
}

__contains_word()
{
    local w word=$1; shift
    for w in "$@"; do
        [[ $w = "$word" ]] && return
    done
    return 1
}

__handle_reply()
{
    __debug "${FUNCNAME[0]}"
    case $cur in
        -*)
            if [[ $(type -t compopt) = "builtin" ]]; then
                compopt -o nospace
            fi
            local allflags
            if [ ${#must_have_one_flag[@]} -ne 0 ]; then
                allflags=("${must_have_one_flag[@]}")
            else
                allflags=("${flags[*]} ${two_word_flags[*]}")
            fi
            COMPREPLY=( $(compgen -W "${allflags[*]}" -- "$cur") )
            if [[ $(type -t compopt) = "builtin" ]]; then
                [[ "${COMPREPLY[0]}" == *= ]] || compopt +o nospace
            fi

            # complete after --flag=abc
            if [[ $cur == *=* ]]; then
                if [[ $(type -t compopt) = "builtin" ]]; then
                    compopt +o nospace
                fi

                local index flag
                flag="${cur%%=*}"
                __index_of_word "${flag}" "${flags_with_completion[@]}"
                COMPREPLY=()
                if [[ ${index} -ge 0 ]]; then
                    PREFIX=""
                    cur="${cur#*=}"
                    ${flags_completion[${index}]}
                    if [ -n "${ZSH_VERSION}" ]; then
                        # zsh completion needs --flag= prefix
                        eval "COMPREPLY=( \"\${COMPREPLY[@]/#/${flag}=}\" )"
                    fi
                fi
            fi
            return 0;
            ;;
    esac

    # check if we are handling a flag with special work handling
    local index
    __index_of_word "${prev}" "${flags_with_completion[@]}"
    if [[ ${index} -ge 0 ]]; then
        ${flags_completion[${index}]}
        return
    fi

    # we are parsing a flag and don't have a special handler, no completion
    if [[ ${cur} != "${words[cword]}" ]]; then
        return
    fi

    local completions
    completions=("${commands[@]}")
    if [[ ${#must_have_one_noun[@]} -ne 0 ]]; then
        completions=("${must_have_one_noun[@]}")
    fi
    if [[ ${#must_have_one_flag[@]} -ne 0 ]]; then
        completions+=("${must_have_one_flag[@]}")
    fi
    COMPREPLY=( $(compgen -W "${completions[*]}" -- "$cur") )

    if [[ ${#COMPREPLY[@]} -eq 0 && ${#noun_aliases[@]} -gt 0 && ${#must_have_one_noun[@]} -ne 0 ]]; then
        COMPREPLY=( $(compgen -W "${noun_aliases[*]}" -- "$cur") )
    fi

    if [[ ${#COMPREPLY[@]} -eq 0 ]]; then
        declare -F __custom_func >/dev/null && __custom_func
    fi

    # available in bash-completion >= 2, not always present on macOS
    if declare -F __ltrim_colon_completions >/dev/null; then
        __ltrim_colon_completions "$cur"
    fi
}

# The arguments should be in the form "ext1|ext2|extn"
__handle_filename_extension_flag()
{
    local ext="$1"
    _filedir "@(${ext})"
}

__handle_subdirs_in_dir_flag()
{
    local dir="$1"
    pushd "${dir}" >/dev/null 2>&1 && _filedir -d && popd >/dev/null 2>&1
}

__handle_flag()
{
    __debug "${FUNCNAME[0]}: c is $c words[c] is ${words[c]}"

    # if a command required a flag, and we found it, unset must_have_one_flag()
    local flagname=${words[c]}
    local flagvalue
    # if the word contained an =
    if [[ ${words[c]} == *"="* ]]; then
        flagvalue=${flagname#*=} # take in as flagvalue after the =
        flagname=${flagname%%=*} # strip everything after the =
        flagname="${flagname}=" # but put the = back
    fi
    __debug "${FUNCNAME[0]}: looking for ${flagname}"
    if __contains_word "${flagname}" "${must_have_one_flag[@]}"; then
        must_have_one_flag=()
    fi

    # if you set a flag which only applies to this command, don't show subcommands
    if __contains_word "${flagname}" "${local_nonpersistent_flags[@]}"; then
      commands=()
    fi

    # keep flag value with flagname as flaghash
    if [ -n "${flagvalue}" ] ; then
        flaghash[${flagname}]=${flagvalue}
    elif [ -n "${words[ $((c+1)) ]}" ] ; then
        flaghash[${flagname}]=${words[ $((c+1)) ]}
    else
        flaghash[${flagname}]="true" # pad "true" for bool flag
    fi

    # skip the argument to a two word flag
    if __contains_word "${words[c]}" "${two_word_flags[@]}"; then
        c=$((c+1))
        # if we are looking for a flags value, don't show commands
        if [[ $c -eq $cword ]]; then
            commands=()
        fi
    fi

    c=$((c+1))

}

__handle_noun()
{
    __debug "${FUNCNAME[0]}: c is $c words[c] is ${words[c]}"

    if __contains_word "${words[c]}" "${must_have_one_noun[@]}"; then
        must_have_one_noun=()
    elif __contains_word "${words[c]}" "${noun_aliases[@]}"; then
        must_have_one_noun=()
    fi

    nouns+=("${words[c]}")
    c=$((c+1))
}

__handle_command()
{
    __debug "${FUNCNAME[0]}: c is $c words[c] is ${words[c]}"

    local next_command
    if [[ -n ${last_command} ]]; then
        next_command="_${last_command}_${words[c]//:/__}"
    else
        if [[ $c -eq 0 ]]; then
            next_command="_$(basename "${words[c]//:/__}")"
        else
            next_command="_${words[c]//:/__}"
        fi
    fi
    c=$((c+1))
    __debug "${FUNCNAME[0]}: looking for ${next_command}"
    declare -F "$next_command" >/dev/null && $next_command
}

__handle_word()
{
    if [[ $c -ge $cword ]]; then
        __handle_reply
        return
    fi
    __debug "${FUNCNAME[0]}: c is $c words[c] is ${words[c]}"
    if [[ "${words[c]}" == -* ]]; then
        __handle_flag
    elif __contains_word "${words[c]}" "${commands[@]}"; then
        __handle_command
    elif [[ $c -eq 0 ]] && __contains_word "$(basename "${words[c]}")" "${commands[@]}"; then
        __handle_command
    else
        __handle_noun
    fi
    __handle_word
}

5	ôÓb
ª
*(


@ 	


	

*J

@





"

 	



 	*	



	$
*
B@




J		
  



	
*


@HJ	
@ @		J*" "		

@

"(
		@A *JÊB	*JHF"*H@
A@*Jj +@À"*		B@@*	


		J*J@A
		 	

H H	@!a JB@	(  

HJ	



JH@H"D"B		*J
 	"	JB@	*@



	(	J* J	*

"@
	
$*j"@J		*@

*( 	
@	AH@A	@D	JB@(B@	 #"	KOm$($"@BA"@
@A*@	@@	JJ@  *(	)B
! *		


 !A	"


*¢$KA@		!	
*D(" @$BJH@$¤ä 		J `@	@DLHH@ABB@AC	@ "!a B	K		@A"@
*( *( B( &	 *" 	
		Ì@ JBH*




	
	@	" "(H"@*"(H	AJ	I@A	
 (**+# 	
B	! 	BAa@`H! @A	"@*(AKA"(Bb
*" 
		J	)H			&
A@	)


*($			H@BÂ	@ DJH@BE$d ( !( ¨èA@ A*@`J@ @	B@
$d " ! JH@"J	J	ÊÎîÈÀ
 `@ @ H	
KA**( 
! "	*(	*( !	A	*	)" @	!@AE	J" 	"%¥­*"bFC" MIH@#B@" 	H@" 	*$*@(DL 


*" !B(h HKA* `*@" 	(		AH	 

DLJ	I	H @	@ *	)




	@AB!	H@@" *ª  "`&	




(! 	E""  ! 	D$(	 H$d@B`BÂ"  (	)
JB@AJ	BH	 
@	@	@$ ! @ @*@Hh`@AB		@AB"!# 	,(h`@	&@`J	*&@J	)(J(h@ @


%@"KAEBFA(	 A*jA 	!)*	 



( !@" B@"
¡ A@`*" KA	*"Ê	*jJH@ ! 	 

		( 









A	
AA*"bBA*j 	" @	








 "-%	 !¡ H@	J@ABCJh 	JCKIA@"* @A!AD	 A"@ 	*@BCAF"	
" ! "$KO@BCA" %! «
+ @A(H@	@	*@J@Á*"HÈ@A(	#%
"A* `!$H	 







P" J#! 	)@AH@ 	@ `J	\KKru44444h111G/*" ,A Á	" AH@À!	 "!A `	(JN `	JBAÁÀ@A , *@A"




(CF!aC`b@A@!	A	IKAH@&¤ ("b (*(@JÊ((K%!a 	D$	 A@"	HA"@J@A $,ADJ&"*!#'DA!$*L"b  $d	 
 @@		LD







&!#'*" 	)%@* HÈ@
(	!	( !	"2( ,( `!	 B 	*( @BA!a 	'	IAÁEH`@ A4$'&@A*" $ (!	(" @BA	"(h`@J(H@! 	 !	J&	$@A---=)9)!	($ " %@AI	L	( B@`JB@A$ 
*"* 
DJB@"`b  @	J%@(	$	B@AH!JJ @	)," @H "&*"b  ¤@AC*! `	((@#C((( CGg	AB@



@!A

" 	" *+)!	@AJ@A "*!@"@&"	 *	 !"! D	"*B "* !`	EDÊA	*@BA( 	"@		!$" )!("Bb@`	HBAJ&.(KB	)!¡ CG(HÈ@@BA	*( A

AB


#! H@  @BCA"  D( @AC" 	(¨ àä
"

"

 ( "$
*	$%'e





$d` 	$J A	" !, IA@@DLA"	Aa)!H@	H( ! @	A	)@EIHA*"*¢ @FDB"¢	 	I J@B`AD#'	IH() @A ($" `!	( (@`%B@" J"B	!A*( 0,%
%
B	@L)@(E*¨**JH@CD`BJb 	H@( !aDLA@	D 	IA )(*3##""$Ì HA H!@BA(((	A$	@AEe#"*J KB	)!¡ DJH		 A@!B"
©BA FÆ@	IDL@	#" `@" (*JH@ACD`BH	J	 `@("$!A
'%Á).*®	 	"b %!%ed`@ !$`HA
* (,"	@A






J 
A!ËA$DÄ@" ("D@!D	@$ 	BÂ@*(	I!a@ 
@@	AH `aDÄ$!@
#! " @$	H

J@"(H!@`HÈÌÀ H ("#`@A !
B@	 ("A	ÂAC%! &	@+)A	!  "#!a 	()	H(@! *+	@!DLC$ "@`*¢   @D*KMÁ	


*( !	JB@	)D'#cJAC@	"bI!  D	A	@ (H*@FD,D	!a 	@"bK	! ()+#%!CH	"!DA	"CB@ª
**"*!a 	$A	"JB@H%
%
%
*@D(	) `**	IJ! #Å
J
I%e `	@A@A'#" A@ &#*(@! `EG*B!! B@	"JHLB@($EDA*(I	hJ	A @`)

$B@  H@	BbA&$	AHhb`C)!	)JÊ
&@AED$"JH@BA	 *	)"KA%ea	I#!
#!JÂ "b)(h¨A	E"!D	%! 00p` EG  ÄBFb"@A 	`h!AB"#!	) HJN*ª		 `@AECGH(IKJFBH(h	!AÀ@C	(H A	)IME@CBFD@!a$( `A!a "A$	@+*" "b¢ BFf"b`DEA	$
DH 	@%ADB*	À),"b!a	)C"!AÁA
 



	M,À.&f$ ")!




@A` 
"%A")(	$*J@#" 
Å	@AC
!"À
( 
BJA
# "(	O `@GN

«
«
«

*
FD@Aa!I " *J`@AEÊB#*" 	I! H
*()"#
	H%A

ª
¨
 
 
*@#c	! ()




Tµ
*ª¨ 	A





!D	!(@BADLH 	 )!&"$%EMmIL
	Bb".LÉ*jª(` KCDL 	HA 

+)(@ #,h$*J
*** 

*B	)@Å!¡a "*jÊê!J@`
#



#	(h¨«
©
¨
($` 	/-S
S
S
S
S
* !	IH¨  ÌLJ



,(@ A!MK%e"(¨JH%DK*jJH@d BIi	! "b*(%e©	$ *B@!	)"&JC@B	FD	 (BD"$
Tµ


#L(«ªª
«*$ @

ETµ
H	(E" `!(H$ 	A)@BDd

Y
Y


















ªªªª
#!aÁÀ@A"`D	H* ¦
¢
 
 
,lCÃBD*	I!($¤äFÆBD&	I $(%!a DHIA
















 
PRZ





(h¨ $&£
¡
 
\
*DL b"	ÌÄ)&!a*( A@$ BCDEed`*HI(h¨ $'G(h¨%@	)!a¡*   A,!(h+#"*Ì$M

H	




(d
©©¡#!aAC	)BFÂ$ ` ÂCa	H*jbJ "Ê	@ckó"DLMÍíml( 	" @.*! CBD#*jJ!J!K
Hh*dD
J,$d%	LHC(h¨I3	£
¡
 
44!l4;4444Z!!­ª
©ª
¨ª
*	ECL"bJ@" *¢	!a¡+)©¨ (
ª
ª
ª
ª
ª
ª
ª
!ªªª
ª*
HHPP
!
 
 1
)
%
%
'
	Å
Å
Å
Å
E
E
@
@
@
@@E
E



**( J
		

((
 
  
øøøø&ù"ù0
 
Àªªªªªªª
À*À::$J


**

****************** ÊÎNB
*ª
ª
ª
ª
ª
ª
¤$00:JÄä
¤äáå*üüüA 
*ü


ÿ
	A*D*F*F
FF



ELC	,)(*b!¡Á`D'aÄd/ ª0
ËÊêj*
E@	àà  #ª
ª
ª
ª
ª

ª
ª
ª
ª
ª
ª
0!0	00
00:V²G«
²G«
²G«
²Gª
²G¨
²G¬
²G S]B]B]B]B]B]B]B]B]B]B]B]B]B]BàAàAàAàAàAàAàAàAàAàAàAàAàAàA4444444
11.@ 
 
  Ä
D
L
B*T*B	@
D	*J* "*CC
G 





G
A*J¤J
¨
" 
@À*:@HAIYXXØÈÈE!,,L 
cc$ !`
  0*+)ÉÉ«ª¤$'¯
+)ÉÉ«
	0
)
!! @
`à@À@
@@
H
À
`
 
   $	
*?)©?)©PP;44444(^^D
D@@@TÃÂPª
PCR
RÉª
ª
ª
ª
(

È¨
KB(

ª
ª
ª
ª
ª
ª
ª
ª
MML
?¨ª
¨ª
¨ª
¨ª
¨ª
¨ª
J
`
¤¤¤0$ "?)TUá'¥ª
?)TUá'?)TUá'¥ª
?)TUá'CC
G
`r441111$CC
GZZ)òü
¬
¬JBCC
G É

ÁÁ
Ãd"Êd
B
B@dà$	HbL¤I44@